arch:
  - amd64
  - arm64
matrix:
  allow_failures:
  - env: TEST=coverity
  include:
    - arch: ppc64le
      env: TEST=make-ppc64le
    - arch: s390x
      env: TEST=make-s390x
    - arch: arm64
      env: TEST=make-arm64
    - arch: amd64
      env: TEST=make-amd64
    - arch: amd64
      env: TEST=make-amd64-nosystemd
    - arch: amd64
      env: TEST=podman
    - arch: amd64
      env: TEST=oci-validation
    - arch: amd64
      env: TEST=coverity
    - arch: amd64
      env: TEST=alpine-build
  matrix:
  - TEST=make-arm64
  - TEST=make-amd64
  - TEST=podman
  - TEST=oci-validation
  - TEST=coverity
  - TEST=alpine-build
  global:
  - COVERITY_SCAN_PROJECT_NAME="giuseppe/crun"
  - COVERITY_SCAN_NOTIFICATION_EMAIL="giuseppe@scrivano.org"
  - COVERITY_SCAN_BRANCH_PATTERN="coverity|master"
  - COVERITY_SCAN_BUILD_COMMAND_PREPEND="./configure"
  - COVERITY_SCAN_BUILD_COMMAND="make coverity"
  - COVERITY_SCAN_BUILD_URL="https://scan.coverity.com/scripts/travisci_build_coverity_scan.sh"
  - COVERITY_SCAN_BUILD="wget -qO- $COVERITY_SCAN_BUILD_URL | bash"
  - secure: "Psgi4JTzjdWoFeDp1nftwgACsbTtp6p5LdiTKP2/1q3JXR4qqNAFloxhQ+6MBRAK33JOkuskW9RyepPxOxcKf+9/n6MVcZE4t6vCKtxljpxOtPSsk1RGi4Vof8Zg3F28bSOft8QotEemwlO+Du142rC3uXp/xETciIrJRGkQGoDldFAxPee/RgpLn9RnRcOjT0gv0SLJu6JLvLhxOwktd3pSarWBffsCBoauQA4QFQTiDBd/c07DFgrN4jK1o/xLPSJ8J2w0a9H4ycyOyyfVlXM2vptB8rpxiHaIDV8xdxRUwJwwLeHE2fr7DofmwXpdbxoVqBZWji6sGslBJyRG1/xZAW+u1NKD1FcTmZtnvquXLMst4UG4mUPwC6egeuDfzvfsmFnqEAH9rivz8mKJGSrbWunpEF67aFZa9tVgHlUHw5Ei/9GT8fP6yzLNzXtQb//okX82CLY9TczlPFpP9l2Yp6AuW8cHIwX3JAD7rnFfaY2I6hCK+8059E4HvlHvYs9QAmmgh/6W9KTAlj5EZ5zPQaJEhOqcZCDtGdKk21lcRMBVu7NhV5hZiku8sAslf5TPdQ4ystiaVt6VR7cDvrAoYQxF2Bl24Fy/fylDXFzjP5T4kJNOWWDWywdEDanv3N9zM1Yo8oHJfrhduo+EU88MJNb3MjYU1AB0zKlEPv4="
services:
- docker
language: c
sudo: required
dist: bionic
addons:
  apt:
    packages:
    - automake
    - libtool
    - autotools-dev
    - libseccomp-dev
    - git
    - make
    - libcap-dev
    - cmake
    - pkg-config
    - gcc
    - wget
    - go-md2man
    - libsystemd-dev
before_install:
- git submodule update --init --recursive
- if test $TEST = podman; then sudo docker build -t crun-podman tests/podman; fi
- if test $TEST = oci-validation; then sudo docker build -t crun-oci-validation tests/oci-validation; fi
- if test $TEST = alpine-build; then sudo docker build -t crun-alpine-build tests/alpine-build; fi
- git clone --depth=1 git://github.com/lloyd/yajl
- "(cd yajl && ./configure -p /usr && make && sudo make install)"
script:
- if test $TEST = make-arm64 || test $TEST = make-amd64 || test $TEST = make-ppc64le || test $TEST = make-s390x; then ./autogen.sh && ./configure CFLAGS='-Wall -Werror' && make -j $(nproc) && make syntax-check; fi
- if test $TEST = make-amd64-nosystemd; then ./autogen.sh && ./configure --disable-systemd CFLAGS='-Wall -Werror' && make -j $(nproc) && make syntax-check; fi
- if test $TEST = podman; then sudo docker run --privileged --rm -v /sys/fs/cgroup:/sys/fs/cgroup:rw,rslave -v $(pwd):/crun crun-podman; fi
- if test $TEST = oci-validation; then sudo docker run --privileged --rm -v /sys/fs/cgroup:/sys/fs/cgroup:rw,rslave -v $(pwd):/crun crun-oci-validation; fi
- if test $TEST = coverity; then ./autogen.sh && eval "${COVERITY_SCAN_BUILD}"; fi
- if test $TEST = alpine-build; then sudo docker run --privileged --rm -v /sys/fs/cgroup:/sys/fs/cgroup:rw,rslave -v $(pwd):/crun crun-alpine-build; fi
